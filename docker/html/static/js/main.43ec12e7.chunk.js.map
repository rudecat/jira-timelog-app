{"version":3,"sources":["App.js","serviceWorkerRegistration.js","reportWebVitals.js","index.js"],"names":["defaultCards","BuildWorkLog","event","target","workcomment","value","timelog","App","useState","cards","setCards","submitTime","setSubmitTime","history","setHistory","CardList","props","profiles","map","profile","Card","Jsummary","Form","onSubmit","handleSubmit","Row","Label","column","sm","href","Jurl","rel","class","Jkey","Col","InputGroup","className","FormControl","id","type","defaultValue","estimate","required","Append","Text","placeholder","comment","Button","variant","isRecurring","onClick","deleteCard","LogHistory","ListGroup","logitems","item","LogItem","Item","timeLogged","filter","a","apiUrl","axios","get","resp","issueList","data","issues","issue","card","key","fields","summary","push","preventDefault","worklog","post","logEntry","Number","console","log","newCard","newCards","concat","c","parentNode","childNodes","clearLog","LoggedTime","ProgressBar","animated","min","now","label","fetchTicket","addTicket","then","result","Group","controlId","Control","fetchFilter","loadFilter","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","onUpdate","onSuccess","catch","error","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById","URL","process","origin","addEventListener","fetch","headers","response","contentType","status","indexOf","ready","unregister","reload","checkValidServiceWorker","serviceWorkerRegistration"],"mappings":"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","file":"static/js/main.43ec12e7.chunk.js","sourcesContent":["import './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport axios from 'axios';\nimport { useState } from 'react';\nimport React from 'react'\nimport { Button, Form , Col, Row, InputGroup, FormControl, ListGroup, ProgressBar } from 'react-bootstrap';\n\nconst defaultCards =\n  [\n    {\n      \"Jkey\": \"DBPB-80\",\n      \"Jurl\": \"https://jira.sandstone.com.au/browse/DBPB-80\",\n      \"Jsummary\": \"Sprint Meetings - Daily Standup\",\n      \"comment\": \"Atlas Daily Standup\",\n      \"estimate\": 15,\n      \"isRecurring\": true\n    },\n    {\n      \"Jkey\": \"DBPB-80\",\n      \"Jurl\": \"https://jira.sandstone.com.au/browse/DBPB-80\",\n      \"Jsummary\": \"Sprint Meetings - Iteration Planning\",\n      \"comment\": \"Atlas Iteration Planning\",\n      \"estimate\": 15,\n      \"isRecurring\": true\n    },\n    {\n      \"Jkey\": \"DBPB-80\",\n      \"Jurl\": \"https://jira.sandstone.com.au/browse/DBPB-80\",\n      \"Jsummary\": \"Sprint Meetings - Iteration Retro\",\n      \"comment\": \"Atlas Iteration Retro\",\n      \"estimate\": 30,\n      \"isRecurring\": true\n    },\n    {\n      \"Jkey\": \"DBPB-80\",\n      \"Jurl\": \"https://jira.sandstone.com.au/browse/DBPB-80\",\n      \"Jsummary\": \"Sprint Meetings - Grooming\",\n      \"comment\": \"Atlas Grooming\",\n      \"estimate\": 60,\n      \"isRecurring\": true\n    },\n    {\n      \"Jkey\": \"DBPB-79\",\n      \"Jurl\": \"https://jira.sandstone.com.au/browse/DBPB-79\",\n      \"Jsummary\": \"General Meetings - FY 21\",\n      \"estimate\": 30,\n      \"isRecurring\": true\n    },\n    {\n      \"Jkey\": \"DBPB-96\",\n      \"Jurl\": \"https://jira.sandstone.com.au/browse/DBPB-96\",\n      \"Jsummary\": \"SoS meetings - FY 21\",\n      \"comment\": \"Scrum of Scrums meeting\",\n      \"estimate\": 60,\n      \"isRecurring\": true\n    },\n    {\n      \"Jkey\": \"DBPB-1795\",\n      \"Jurl\": \"https://jira.sandstone.com.au/browse/DBPB-1795\",\n      \"Jsummary\": \"Scrum Master Activities - FY 21\",\n      \"estimate\": 60,\n      \"isRecurring\": true\n    }\n  ];\n\nfunction App() {\n  const [cards, setCards] = useState([]);\n  const [submitTime, setSubmitTime] = useState(0);\n  const [history, setHistory] = useState([]);\n\n  const CardList = props => (\n    <div>\n      {props.profiles.map(profile => <Card key={profile.Jsummary} {...profile}/>)}\n    </div>\n  );\n\n  const Card = props => (\n    <>\n      <div>\n        <Form onSubmit={handleSubmit}>\n            <Form.Row>\n               <Form.Label column sm=\"3\"><a href={props.Jurl} target=\"_blank\" rel=\"noreferrer\" class=\"text-light\">{props.Jkey}-{props.Jsummary}</a></Form.Label>\n               <Col sm=\"2\">\n                <InputGroup className=\"mb-2\">\n                  <FormControl id=\"timelog\" type=\"number\" defaultValue={props.estimate} required />\n                  <InputGroup.Append>\n                    <InputGroup.Text>mins</InputGroup.Text>\n                  </InputGroup.Append>\n                </InputGroup>\n              </Col>\n              <Col sm=\"2\">\n                <FormControl id=\"workcomment\" type=\"text\" placeholder=\"Comment\" defaultValue={props.comment}/>\n              </Col>\n              <Col sm=\"1\">\n                <Button variant=\"info\" type=\"submit\">Log time</Button>\n              </Col>\n              <FormControl id=\"Jkey\" type=\"hidden\" value={props.Jkey}/>\n              <FormControl id=\"Jsummary\" type=\"hidden\" value={props.Jsummary}/>\n            {props.isRecurring ? null : <Col sm=\"1\"><Button type=\"Button\" variant=\"danger\" onClick={deleteCard}>Remove</Button></Col>}\n            </Form.Row>\n        </Form>\n        <br/>\n      </div>\n    </>\n  );\n\n  const LogHistory = props => (\n    <ListGroup>\n      {props.logitems.map(item => <LogItem key={item.Jkey} {...item}/>)}\n    </ListGroup>\n  );\n\n  const LogItem = props => (\n    <ListGroup.Item class=\"text-light\">{props.Jkey} - {props.Jsummary} --- {props.timeLogged}</ListGroup.Item>\n  );\n\n  async function fetchFilter(filter) {\n    const apiUrl = 'https://localhost/jira/search?jql=filter%3D'+filter;\n    const resp = await axios.get(apiUrl);\n    const issueList = [];\n    resp.data.issues.map(issue => {\n      let card = {\n        \"Jkey\": issue.key,\n        \"Jurl\": \"https://jira.sandstone.com.au/browse/\"+issue.key,\n        \"Jsummary\": issue.fields.summary\n      };\n      issueList.push(card)\n    });\n    // console.log(issueList);\n    return issueList;\n  }\n\n  const handleSubmit = async (event) => {\n    event.preventDefault();\n    const apiUrl = `https://localhost/jira/issue/${event.target.Jkey.value}/worklog`;\n    const worklog = BuildWorkLog(event);\n    const resp = await axios.post(apiUrl, worklog);\n    const logEntry = {\n      \"Jkey\": event.target.Jkey.value,\n      \"Jsummary\": event.target.Jsummary.value,\n      \"timeLogged\": event.target.timelog.value+\" minutes\"\n    };\n    history.push(logEntry)\n    setSubmitTime(Number(submitTime) + Number(event.target.timelog.value));\n    setHistory(history);\n  };\n\n  async function fetchTicket(key) {\n    const apiUrl = `https://localhost/jira/issue/${key}`;\n    const resp = await axios.get(apiUrl);\n    console.log(resp);\n    const newCard = {\n      \"Jkey\": key,\n      \"Jsummary\": resp.data.fields.summary,\n      \"Jurl\": \"https://jira.sandstone.com.au/browse/\"+key\n    }\n    console.log(newCard);\n    var newCards = [];\n    newCards.push(newCard);\n    console.log(newCards);\n    return newCards.concat(cards);\n  }\n\n  const addCard = (event) => {\n    event.preventDefault();\n    fetchTicket(event.target.addTicket.value).then(result => {\n      setCards(result);\n    });\n  }\n\n  const deleteCard = (event) => {\n    event.preventDefault();\n    console.log(event);\n    let newCards = cards.filter(c => c.Jkey !== event.target.parentNode.parentNode.childNodes[4].value);\n    setCards(newCards);\n  }\n\n  const clearLog = (event) => {\n    event.preventDefault();\n    setHistory([]);\n    setSubmitTime(0);\n  }\n\n  const LoggedTime = props => (\n    <>\n      <Col sm=\"5\"><h1 class=\"page-header\">Total time logged</h1></Col>\n      <Row>\n      <Col sm=\"5\"><ProgressBar animated variant=\"success\" min={10} now={submitTime*100/450} label={`${submitTime*100/450}%`}/></Col><Button onClick={clearLog}>Clear Log</Button>\n      </Row>\n    </>\n  );\n\n  const loadFilter = (event) => {\n    event.preventDefault();\n    fetchFilter(event.target.loadFilter.value).then(result => {\n      setCards(result);\n      })\n  }\n\n  return (\n    <>\n      <LoggedTime />\n      <h2>Recurring Tasks</h2>\n      <CardList profiles={defaultCards} />\n      <h2>Filtered Tasks</h2>\n      <Form.Row>\n      <Col sm=\"3\" >\n      <Form onSubmit={addCard}>\n        <Form.Group controlId=\"addTicket\">\n          <Form.Control type=\"string\" placeholder=\"Jira Ticket\" />\n        </Form.Group>\n        <Button variant=\"primary\" type=\"submit\">\n          Add ticket\n        </Button>\n      </Form>\n      </Col>\n      <Col sm=\"0.6\"><p class=\"text-light\"> OR </p></Col>\n      <Col sm=\"3\" >\n      <Form onSubmit={loadFilter}>\n        <Form.Group controlId=\"loadFilter\">\n          <Form.Control type=\"string\" placeholder=\"Jira Filter\" />\n        </Form.Group>\n        <Button variant=\"primary\" type=\"submit\">\n          Load Filter\n        </Button>\n      </Form>\n      </Col>\n      </Form.Row>\n      <br/>\n      <CardList profiles={cards} />\n      <h2>Log History</h2>\n      <LogHistory logitems={history} />\n    </>\n  );\n};\n\nfunction BuildWorkLog(event) {\n  return {\n     \"comment\": event.target.workcomment.value,\n     \"timeSpent\": `${event.target.timelog.value}m`\n  };\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        // navigator.serviceWorker.ready.then(() => {\n        //   console.log(\n        //     'This web app is being served cache-first by a service ' +\n        //       'worker. To learn more, visit https://cra.link/PWA'\n        //   );\n        // });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              // console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://cra.link/PWA\nserviceWorkerRegistration.register();\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}